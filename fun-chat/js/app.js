(()=>{"use strict";var e,t;!function(e){e.USER_LOGIN="USER_LOGIN",e.USER_LOGOUT="USER_LOGOUT",e.USER_ACTIVE="USER_ACTIVE",e.USER_INACTIVE="USER_INACTIVE",e.USER_EXTERNAL_LOGIN="USER_EXTERNAL_LOGIN",e.USER_EXTERNAL_LOGOUT="USER_EXTERNAL_LOGOUT",e.ERROR="ERROR"}(e||(e={})),function(e){e.UpdateUser="UpdateUser",e.UpdateUserForMessages="UpdateUserForMessages",e.UpdateMessage="UpdateMessage",e.UpdateMessagesHistory="UpdateMessagesHistory",e.UpdatePage="UpdatePage",e.UpdateUsersActive="UpdateUsersActive",e.UpdateUsersInactive="UpdateUsersInactive",e.UpdateModalState="UpdateModalState",e.UpdateReadMessages="UpdateReadMessages",e.UpdateSearchUser="UpdateSearchUser"}(t||(t={}));const s=new class{constructor(){Object.defineProperty(this,"state",{enumerable:!0,configurable:!0,writable:!0,value:{page:"login",user:{id:"",type:"",payload:{user:{login:"",password:""}}},userForMessages:{login:"",password:"",isLogined:!1},searchUser:"",message:"",messageID:"",messagesHistory:{},chatFieldHint:"Select the user to send the message...",usersActive:[],usersInactive:[],modalStateHidden:!0}}),Object.defineProperty(this,"updateMessageID",{enumerable:!0,configurable:!0,writable:!0,value:e=>{this.state.messageID=e}}),Object.defineProperty(this,"updateMessagesHistory",{enumerable:!0,configurable:!0,writable:!0,value:e=>{const s={...this.state.messagesHistory};Object.entries(e).forEach((([e,t])=>{s[e]=t})),this.state.messagesHistory=s,window.dispatchEvent(new CustomEvent(t.UpdateMessagesHistory,{bubbles:!0,detail:{}}))}}),Object.defineProperty(this,"updateMessageHistoryById",{enumerable:!0,configurable:!0,writable:!0,value:(e,s,a)=>{this.state.messagesHistory[e]={...this.state.messagesHistory[e],status:{...this.state.messagesHistory[e].status,...s},text:a||this.state.messagesHistory[e].text},window.dispatchEvent(new CustomEvent(t.UpdateMessagesHistory,{bubbles:!0,detail:{}}))}}),Object.defineProperty(this,"updateMessage",{enumerable:!0,configurable:!0,writable:!0,value:e=>{this.state.message=e,window.dispatchEvent(new CustomEvent(t.UpdateMessage,{bubbles:!0,detail:{message:e,user:this.state.userForMessages}}))}}),Object.defineProperty(this,"updateMessageById",{enumerable:!0,configurable:!0,writable:!0,value:(e,s)=>{this.state.message=e,window.dispatchEvent(new CustomEvent(t.UpdateMessage,{bubbles:!0,detail:{message:e,id:s,user:this.state.userForMessages}}))}}),Object.defineProperty(this,"updateUserForMessages",{enumerable:!0,configurable:!0,writable:!0,value:e=>{this.state.userForMessages=e,window.dispatchEvent(new CustomEvent(t.UpdateUserForMessages,{bubbles:!0,detail:{user:e}}))}}),Object.defineProperty(this,"updateModalState",{enumerable:!0,configurable:!0,writable:!0,value:e=>{this.state.modalStateHidden=e,window.dispatchEvent(new CustomEvent(t.UpdateModalState,{bubbles:!0,detail:{}}))}}),Object.defineProperty(this,"updateUsersActive",{enumerable:!0,configurable:!0,writable:!0,value:e=>{e.payload&&e.payload.users&&(this.state.usersActive=e.payload.users),window.dispatchEvent(new CustomEvent(t.UpdateUsersActive,{bubbles:!0,detail:{}}))}}),Object.defineProperty(this,"updateUsersInactive",{enumerable:!0,configurable:!0,writable:!0,value:e=>{e.payload&&e.payload.users?this.state.usersInactive=e.payload.users:this.state.usersInactive=[],window.dispatchEvent(new CustomEvent(t.UpdateUsersInactive,{bubbles:!0,detail:{}}))}}),Object.defineProperty(this,"updatePage",{enumerable:!0,configurable:!0,writable:!0,value:e=>{this.state.page=e,window.location.hash=e,window.dispatchEvent(new CustomEvent(t.UpdatePage,{bubbles:!0,detail:{}}))}}),Object.defineProperty(this,"updateUser",{enumerable:!0,configurable:!0,writable:!0,value:(e,s)=>{null!==this.state.user.payload&&this.state.user.payload.user&&(this.state.user.payload.user.login=e,this.state.user.payload.user.password=s,window.dispatchEvent(new CustomEvent(t.UpdateUser,{bubbles:!0,detail:{}})))}}),Object.defineProperty(this,"updateSearchUser",{enumerable:!0,configurable:!0,writable:!0,value:e=>{this.state.searchUser=e,window.dispatchEvent(new CustomEvent(t.UpdateSearchUser,{bubbles:!0,detail:{}}))}}),Object.defineProperty(this,"getSearchUser",{enumerable:!0,configurable:!0,writable:!0,value:()=>this.state.searchUser}),Object.defineProperty(this,"getMessageID",{enumerable:!0,configurable:!0,writable:!0,value:()=>this.state.messageID}),Object.defineProperty(this,"getMessagesHistory",{enumerable:!0,configurable:!0,writable:!0,value:()=>this.state.messagesHistory}),Object.defineProperty(this,"getMessageHistoryByCurrentUser",{enumerable:!0,configurable:!0,writable:!0,value:e=>{const t=this.getUser().payload?.user?.login,s=this.getUserForMessages().login;return Object.entries(this.state.messagesHistory).filter((([,t])=>!e||t.status.isReaded===e)).filter((([,e])=>e.from===t&&e.to===s||e.to===t&&e.from===s)).sort((([,e],[,t])=>e.datetime-t.datetime)).reduce(((e,[t,s])=>(e[t]=s,e)),{})}}),Object.defineProperty(this,"getMessageHistoryByCurrentUserNotRead",{enumerable:!0,configurable:!0,writable:!0,value:e=>{const t=this.getUser().payload?.user?.login,s=e?e.login:this.getUserForMessages().login;return Object.entries(this.state.messagesHistory).filter((([,e])=>!1===e.status.isReaded)).filter((([,e])=>e.to===t&&e.from===s)).reduce(((e,[t,s])=>(e[t]=s,e)),{})}}),Object.defineProperty(this,"getUserForMessages",{enumerable:!0,configurable:!0,writable:!0,value:()=>this.state.userForMessages}),Object.defineProperty(this,"getModalState",{enumerable:!0,configurable:!0,writable:!0,value:()=>this.state.modalStateHidden}),Object.defineProperty(this,"getUsersActive",{enumerable:!0,configurable:!0,writable:!0,value:()=>this.state.usersActive??[]}),Object.defineProperty(this,"getUsersInactive",{enumerable:!0,configurable:!0,writable:!0,value:()=>this.state.usersInactive??[]}),Object.defineProperty(this,"getPage",{enumerable:!0,configurable:!0,writable:!0,value:()=>this.state.page}),Object.defineProperty(this,"getUser",{enumerable:!0,configurable:!0,writable:!0,value:()=>this.state.user})}};class a{init(){const e=this.draw();return this.addEventListeners(),e}}const n=new class{constructor(e){Object.defineProperty(this,"storageKeyPrefix",{enumerable:!0,configurable:!0,writable:!0,value:e})}getStorageKey(e){return`${this.storageKeyPrefix}_${e}`}saveData(e,t){const s=this.getStorageKey(e);sessionStorage.setItem(s,JSON.stringify(t))}getData(e){const t=this.getStorageKey(e),s=sessionStorage.getItem(t);return s?JSON.parse(s):null}getUserFromStorage(e){const t=this.getData(e);return t||null}addData(e,t){const s=this.getStorageKey(e),a=sessionStorage.getItem(s),n=a?JSON.parse(a):null;if(n){const e=[...n,...t];sessionStorage.setItem(s,JSON.stringify(e))}else sessionStorage.setItem(s,JSON.stringify(t))}clearData(){sessionStorage.clear()}removeData(e){const t=this.getStorageKey(e);sessionStorage.removeItem(t)}}("letanatol");class i extends a{constructor(){super(),Object.defineProperty(this,"container",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.container=document.createElement("section"),this.container.classList.add("footer")}draw(){return this.container.innerHTML='\n      <div class="footer__row">\n        <ul class="footer__list">\n          <li class="footer__item">\n            <a href="https://github.com/letanatol/" target="_blank" class="footer__link">letanatol</a>\n          </li>\n          <li class="footer__item">\n            <strong class="contacts__bold">2024</strong>\n          </li>\n          <li class="footer__item">\n            <a href="https://rs.school/courses/javascript-mentoring-program" target="_blank" class="footer__link">\n             RS School\n            </a>\n          </li>\n        </ul>\n      </div>\n    ',this.container}addEventListeners(){}}class o extends a{constructor(){super(),Object.defineProperty(this,"container",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.container=document.createElement("section"),this.container.classList.add("header")}draw(){const e=n.getUserFromStorage("user");return e&&e.password&&(this.container.innerHTML=`\n      <div class="header__user-name"> User: \n        <span id="userName">${e.login}</span>\n      </div>\n      <h1>Fun Chat</h1>\n      <button class="button header__button-about" id="about">About</button>\n      <button class="button header__button-logout" id="logout">Logout</>\n    `),this.container}addEventListeners(){}}class r extends a{constructor(){super(),Object.defineProperty(this,"container",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inputSearch",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.container=document.createElement("div"),this.container.classList.add("chat-users"),this.inputSearch=document.createElement("input"),this.inputSearch=document.createElement("input"),this.inputSearch.placeholder="Search..."}draw(){const e=document.createElement("ul");e.classList.add("users-list");const t=s.getUsersActive(),a=n.getUserFromStorage("user"),i=n.getUserFromStorage("userForMessages"),o=i?.login;if(!a||!a.login)return e;const r=s.getSearchUser();t.filter((e=>e.login.indexOf(r)>=0)).forEach((t=>{const n=s.getMessageHistoryByCurrentUserNotRead(t),i=Object.keys(n).length,{login:r}=t;if(r!==a.login){const t=document.createElement("li");t.classList.add("user-row"),r===o&&t.classList.add("user__for-message"),t.innerHTML=i?`\n            <div class="user-status active"></div>\n            <label class="user-login">${r}</label>\n            <label class="user-noRead">${i}</label>\n          `:`\n            <div class="user-status active"></div>\n            <label class="user-login">${r}</label>\n          `,e.append(t)}}));return s.getUsersInactive().filter((e=>e.login.indexOf(r)>=0)).forEach((t=>{const{login:s}=t;if(s!==a.login){const t=document.createElement("li");t.classList.add("user-row"),s===o&&t.classList.add("user__for-message"),t.innerHTML=`\n        <div class="user-status inactive"></div>\n        <label class="user-login">${s}</label>\n      `,e.append(t)}})),this.container.innerHTML="",this.container.append(this.inputSearch,e),this.container}addEventListeners(){window.addEventListener(t.UpdateUsersActive,(()=>{this.draw()})),window.addEventListener(t.UpdateUsersInactive,(()=>{this.draw()})),window.addEventListener(t.UpdateMessagesHistory,(()=>{this.draw()})),window.addEventListener(t.UpdateSearchUser,(()=>{this.draw(),this.inputSearch.focus()})),this.inputSearch.addEventListener("input",(e=>{const{value:t}=e.target;s.updateSearchUser(t)}))}}class d extends a{constructor(){super(),Object.defineProperty(this,"container",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.container=document.createElement("div"),this.container.classList.add("chat-messages__header")}draw(){return this.container.innerHTML="",this.container}drawWithUser(){const e=n.getUserFromStorage("userForMessages");if(e&&e.login){let t="",s="";e.isLogined?(t="user_active",s="online"):(t="user_inactive",s="offline"),this.container.innerHTML=`\n        <span id="userForMessages">User: ${e.login}</span>\n        <div class=${t}>${s}</div>\n    `}return this.container}addEventListeners(){window.addEventListener(t.UpdateUserForMessages,(()=>{this.drawWithUser()}))}}const l=new class{constructor(){Object.defineProperty(this,"socket",{enumerable:!0,configurable:!0,writable:!0,value:new WebSocket("ws://localhost:4000")}),Object.defineProperty(this,"onMessage",{enumerable:!0,configurable:!0,writable:!0,value:e=>{const t=JSON.parse(e.data);console.log("onMessage",t);const a={id:"",type:"USER_ACTIVE",payload:null},i={id:"",type:"USER_INACTIVE",payload:null},o=e=>({id:"",type:"MSG_FROM_USER",payload:{user:{login:e}}});if("USER_LOGIN"===t.type&&t.payload.user?.isLogined&&(s.updatePage("main"),window.location.hash="main",this.wsSend(JSON.stringify(a)),this.wsSend(JSON.stringify(i))),"USER_LOGOUT"===t.type&&(t.payload.user?.isLogined||(s.updatePage("login"),window.location.hash="login")),"USER_ACTIVE"===t.type&&(s.updateUsersActive(t),t.payload.users?.filter((e=>e.login!==s.getUser().payload?.user?.login)).forEach((e=>this.wsSend(JSON.stringify(o(e.login)))))),"USER_INACTIVE"===t.type&&(s.updateUsersInactive(t),t.payload.users?.filter((e=>e.login!==s.getUser().payload?.user?.login)).forEach((e=>this.wsSend(JSON.stringify(o(e.login)))))),"USER_EXTERNAL_LOGIN"===t.type){const e=t.payload.user?.login,o=n.getUserFromStorage("userForMessages");if(e===o?.login){const e={...o,isLogined:!0,login:o?.login||""};n.saveData("userForMessages",e),s.updateUserForMessages(e)}this.wsSend(JSON.stringify(a)),this.wsSend(JSON.stringify(i))}if("USER_EXTERNAL_LOGOUT"===t.type){const e=t.payload.user?.login,o=n.getUserFromStorage("userForMessages");if(e===o?.login){const e={...o,isLogined:!1,login:o?.login||""};n.saveData("userForMessages",e),s.updateUserForMessages(e)}this.wsSend(JSON.stringify(a)),this.wsSend(JSON.stringify(i))}if("ERROR"===t.type&&t.payload.error&&console.log(t.payload.error),"MSG_FROM_USER"===t.type){const e=t.payload.messages.reduce(((e,t)=>(e[t.id]=t,e)),{});s.updateMessagesHistory(e)}if("MSG_SEND"===t.type){const{id:e}=t.payload.message,a={[e]:t.payload.message};s.updateMessagesHistory(a)}if("MSG_READ"===t.type){const{id:e,status:a}=t.payload.message;s.updateMessageHistoryById(e,a)}if("MSG_EDIT"===t.type){const{id:e,text:a}=t.payload.message;s.updateMessageHistoryById(e,{isEdited:!0},a)}if("MSG_DELIVER"===t.type){const{id:e}=t.payload.message,a=s.getMessagesHistory();a[e].status.isDelivered=!0,s.updateMessagesHistory(a)}if("MSG_DELETE"===t.type){const{id:e}=t.payload.message,a=s.getMessagesHistory();delete a[e],s.updateMessagesHistory(a)}}}),Object.defineProperty(this,"onOpen",{enumerable:!0,configurable:!0,writable:!0,value:()=>{s.updateModalState(!0),console.log("socket.readyState",this.socket.readyState),console.log("Connection open"),this.socket.addEventListener("close",this.onClose),this.socket.addEventListener("message",this.onMessage);const e=s.getUser(),t=n.getUserFromStorage("user");t&&t.password&&(e.type="USER_LOGIN",e.payload&&e.payload.user&&(e.payload.user.login=t.login,e.payload.user.password=t.password,this.wsSend(JSON.stringify(e))))}}),Object.defineProperty(this,"onClose",{enumerable:!0,configurable:!0,writable:!0,value:()=>{console.log("Connection close"),console.log("socket.readyState",this.socket.readyState),this.socket.removeEventListener("open",this.onOpen),this.socket.removeEventListener("close",this.onClose),this.socket.removeEventListener("message",this.onMessage),s.updateModalState(!1),this.waitForConnection((()=>console.log("reconnected")),1e3)}}),this.addListeners(),this.socket.addEventListener("error",(e=>{console.log(e)}))}wsSend(e){this.waitForConnection((()=>{this.socket.send(e)}),1e3)}waitForConnection(e,t){if(this.socket.readyState!==WebSocket.OPEN){if(this.socket.readyState===WebSocket.CLOSED)return console.log("WS closed, reopen"),this.socket=new WebSocket("ws://localhost:4000"),this.socket.addEventListener("error",(e=>{console.log(e)})),this.socket.addEventListener("open",this.onOpen),void setTimeout((()=>{this.waitForConnection(e,t)}),t);console.log("Waiting"),setTimeout((()=>{this.waitForConnection(e,t)}),t)}else e()}addListeners(){this.socket.addEventListener("open",this.onOpen),window.addEventListener(t.UpdateUserForMessages,(e=>{const t={id:"",type:"MSG_FROM_USER",payload:{user:{login:""}}};t.payload.user.login=e.detail.user.login,this.wsSend(JSON.stringify(t))})),window.addEventListener(t.UpdateReadMessages,(e=>{Object.entries(e.detail.userMessages).forEach((([e])=>this.wsSend(JSON.stringify({id:"",type:"MSG_READ",payload:{message:{id:e}}}))))})),window.addEventListener(t.UpdateMessage,(e=>{if(!e.detail.id){const t={id:"",type:"MSG_SEND",payload:{message:{to:"",text:""}}};return t.payload.message.text=e.detail.message,t.payload.message.to=e.detail.user.login,void this.wsSend(JSON.stringify(t))}const t={id:"",type:"MSG_EDIT",payload:{message:{id:"",text:""}}};t.payload.message.id=e.detail.id,t.payload.message.text=e.detail.message,this.wsSend(JSON.stringify(t))}))}},c=(e,t)=>{const s=e.querySelector(t);if(!s)throw new TypeError(`Element not found: ${t}`);return s},u=e=>{const t=document.getElementById(e);if(!t)throw new TypeError(`Element not found: ${e}`);return t};class g extends a{constructor(){super(),Object.defineProperty(this,"dividerSpan",{enumerable:!0,configurable:!0,writable:!0,value:document.createElement("span")}),Object.defineProperty(this,"container",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"contextMenu",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.container=document.createElement("div"),this.container.classList.add("chat-field__messages"),this.contextMenu=document.createElement("ul"),this.dividerSpan.textContent="______________________ New messages __________________"}draw(){return this.container.innerHTML="",this.container.innerHTML='<div class="message_hint">Select the user to send the message...</div>',this.container}drawMessageField(){this.container.innerHTML="";const e=n.getUserFromStorage("user"),t=s.getMessageHistoryByCurrentUser();0===Object.keys(t).length&&(this.container.innerHTML='<div class="message_hint">Write your first message...</div>');const a=Object.entries(t),i=a.filter((([,t])=>!0===t.status.isReaded||void 0!==t.from&&t.from===e?.login)),o=a.filter((([,t])=>!1===t.status.isReaded&&void 0!==t.from&&t.from!==e?.login));return i.forEach((([t,s])=>{const a=document.createElement("div");a.classList.add("message_container"),a.id=t;const n=document.createElement("div");n.classList.add("message__content");const i=document.createElement("div");i.classList.add("message__header");const o=document.createElement("label");o.classList.add("message__sender");const r=document.createElement("label");r.classList.add("message__data");const d=new Date(s.datetime);r.textContent=d.toLocaleString(),i.append(o,r);const l=document.createElement("div");l.classList.add("message__text"),l.textContent=s.text;const c=document.createElement("div");c.classList.add("message__footer");const u=document.createElement("label");u.classList.add("message__edit"),u.textContent=s.status.isEdited?"Edited":"";const g=document.createElement("label");g.classList.add("message__status"),void 0!==s.from&&s.from===e?.login?(o.textContent="You",a.classList.add("message__right"),g.textContent=s.status.isDelivered?"Delivered":"Sent",s.status.isReaded&&(g.textContent="Read")):(o.textContent=s.from??"",a.classList.add("message__left")),c.append(u,g),n.append(i,l,c),a.append(n),this.container.append(a)})),0===o.length&&(this.dividerSpan.className="divider-hide"),o.length>0&&(this.dividerSpan.className="divider-show",this.container.append(this.dividerSpan),o.forEach((([t,s])=>{const a=document.createElement("div");a.classList.add("message_container"),a.id=t;const n=document.createElement("div");n.classList.add("message__content");const i=document.createElement("div");i.classList.add("message__header");const o=document.createElement("label");o.classList.add("message__sender");const r=document.createElement("label");r.classList.add("message__data");const d=new Date(s.datetime);r.textContent=d.toLocaleString(),i.append(o,r);const l=document.createElement("div");l.classList.add("message__text"),l.textContent=s.text;const c=document.createElement("div");c.classList.add("message__footer");const u=document.createElement("label");u.classList.add("message__edit"),u.textContent=s.status.isEdited?"Edited":"";const g=document.createElement("label");g.classList.add("message__status"),void 0!==s.from&&s.from===e?.login?(o.textContent="You",a.classList.add("message__right"),g.textContent=s.status.isDelivered?"Delivered":"Sent",s.status.isReaded&&(g.textContent="Read")):(o.textContent=s.from??"",a.classList.add("message__left")),c.append(u,g),n.append(i,l,c),a.append(n),this.container.append(a)}))),"divider-show"===this.dividerSpan.className?this.dividerSpan.scrollIntoView():this.container.scrollTop=this.container.scrollHeight,this.contextMenu.classList.add("context-menu"),this.contextMenu.id="contextMenu",this.contextMenu.style.display="none",this.contextMenu.innerHTML='\n      <li class="context-menu__item edit-message">Edit</li>\n      <li class="context-menu__item delete-message">Delete</li>\n    ',this.container.append(this.contextMenu),this.container}addEventListeners(){this.container.addEventListener("contextmenu",(e=>{e.preventDefault();const t=e.target,a=t.closest(".message_container")?.querySelector(".message__sender");if(a&&"You"===a.textContent){this.contextMenu.style.display="block",this.contextMenu.style.position="absolute",this.contextMenu.style.zIndex="10";const a=e.clientX-200,n=e.clientY-120;if(this.contextMenu.style.left=`${a}px`,this.contextMenu.style.top=`${n}px`,t.closest(".message_container")){const e=t.closest(".message_container");if(e){const t=e.id;s.updateMessageID(t)}}}})),this.container.addEventListener("wheel",(()=>{if(n.getUserFromStorage("userForMessages")){const e=s.getMessageHistoryByCurrentUserNotRead();window.dispatchEvent(new CustomEvent(t.UpdateReadMessages,{bubbles:!0,detail:{userMessages:e}}))}})),this.container.addEventListener("click",(()=>{if(n.getUserFromStorage("userForMessages")){const e=s.getMessageHistoryByCurrentUserNotRead();window.dispatchEvent(new CustomEvent(t.UpdateReadMessages,{bubbles:!0,detail:{userMessages:e}}))}})),this.contextMenu.addEventListener("click",(e=>{const t=e.target;if(t&&t.classList){if(t.classList.contains("delete-message")){const e={id:"",type:"MSG_DELETE",payload:{message:{id:""}}};e.payload.message.id=s.getMessageID(),s.updateMessageID(""),l.wsSend(JSON.stringify(e))}if(t.classList.contains("edit-message")){const e=s.getMessageID(),t=u(e),a=t.querySelector(".message__text")?.textContent,n=u("chat-field__input"),i=u("chat-field__button");a&&(n.value=a,n.focus(),n.value.trim().length>0?i.removeAttribute("disabled"):i.setAttribute("disabled","disabled"))}}})),window.addEventListener(t.UpdateUserForMessages,(()=>{this.drawMessageField()})),window.addEventListener(t.UpdateMessagesHistory,(()=>{n.getUserFromStorage("userForMessages")&&this.drawMessageField()})),window.addEventListener("click",(()=>{this.contextMenu.style.display="none"}))}}class p extends a{constructor(){super(),Object.defineProperty(this,"form",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.form=document.createElement("form"),this.form.classList.add("chat-field__form")}draw(){return this.form.innerHTML='\n        <input class="chat-field__input" id="chat-field__input" placeholder="Message..." disabled>\n        <button type="submit" class="button chat-field__button" id="chat-field__button" disabled>Send</button>\n    ',this.form}addEventListeners(){this.form.addEventListener("submit",(e=>{e.preventDefault();const a=c(document.body,".chat-field__input"),i=a.value.trim(),o=s.getMessageID();if(""!==i){o?(s.updateMessageById(i,o),s.updateMessageID("")):s.updateMessage(i),a.value="";u("chat-field__button").setAttribute("disabled","disabled")}if(n.getUserFromStorage("userForMessages")){const e=s.getMessageHistoryByCurrentUserNotRead();window.dispatchEvent(new CustomEvent(t.UpdateReadMessages,{bubbles:!0,detail:{userMessages:e}}))}})),this.form.addEventListener("keydown",(e=>{"Enter"===e.key&&(e.preventDefault(),this.form.dispatchEvent(new Event("submit")))}))}}class h extends a{constructor(){super(),Object.defineProperty(this,"container",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.container=document.createElement("div"),this.container.classList.add("container_chat-page")}draw(){const e=(new o).init(),t=document.createElement("div");t.classList.add("chat__content");const s=(new r).init(),a=document.createElement("div");a.classList.add("chat-messages");const n=(new d).init(),l=(new g).init(),c=(new p).init(),u=(new i).init();return a.append(n,l,c),t.append(s,a),this.container.append(e,t,u),this.container}addEventListeners(){this.container.addEventListener("click",(e=>{const t=e.target;if(!t||!t.classList)return;const a=c(document.body,".chat-field__input"),i=c(document.body,".chat-field__button");if(t.classList.contains("user-row")){document.querySelectorAll(".user-row").forEach((e=>{e.classList.remove("user__for-message")})),t.classList.add("user__for-message");const e=t.querySelector(".user-login");let i=!1;if(t.querySelector(".active")&&(i=!0),t.querySelector(".inactive")&&(i=!1),e){const t=e.textContent;n.saveData("userForMessages",{login:t,isLogined:i}),s.updateUserForMessages({login:t,isLogined:i})}a.removeAttribute("disabled")}a.addEventListener("input",(()=>{a.value.trim().length>0?i.removeAttribute("disabled"):i.setAttribute("disabled","disabled")}))}))}}class m extends a{constructor(){super(),Object.defineProperty(this,"container",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"form",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inputLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"buttonSubmit",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"inputPassword",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.container=document.createElement("div"),this.container.classList.add("container_login-page"),this.form=document.createElement("form"),this.form.classList.add("form_login-page"),this.inputLogin=document.createElement("input"),this.inputLogin.id="input-login",this.inputLogin.placeholder="Enter the login",this.inputLogin.classList.add("input_login-page"),this.inputPassword=document.createElement("input"),this.inputPassword.id="input-password",this.inputPassword.placeholder="Enter the password",this.inputPassword.classList.add("input_password-page"),this.buttonSubmit=document.createElement("button"),this.buttonSubmit.classList.add("submit_login-page"),this.buttonSubmit.textContent="Log in",this.buttonSubmit.setAttribute("disabled","disabled"),this.form.append(this.inputLogin,this.inputPassword,this.buttonSubmit),this.container.append(this.form),window.location.hash="login"}draw(){document.createElement("form").classList.add("form_login-page");const e=document.createElement("fieldset");e.classList.add("fieldset_login-page");const t=document.createElement("legend");t.textContent="Authorization";const s=document.createElement("div");s.classList.add("row_login-page");const a=document.createElement("lable");a.textContent="Login";const n=document.createElement("div");n.classList.add("input-wrapper_login-page");const i=document.createElement("div");i.id="login-error",n.append(this.inputLogin,i),s.append(a,n);const o=document.createElement("div");o.classList.add("row_login-page");const r=document.createElement("lable");r.textContent="Password";const d=document.createElement("div");d.classList.add("input-wrapper_login-page");const l=document.createElement("div");l.id="password-error",d.append(this.inputPassword,l),o.append(r,d),e.append(t,s,o);const c=document.createElement("button");return c.classList.add("about_login-page"),c.textContent="About",this.form.append(e,this.buttonSubmit,c),this.container.append(this.form),this.container}addEventListeners(){let e=!1,t=!1;const a=()=>{const t=this.inputLogin.value;let s="";t.length<4&&(s+="Login must be at least 4 characters long. ");/^[a-zA-Z]+$/.test(t)||(s+="Login must contain only Latin characters. "),s?(u("login-error").textContent=s.trim(),e=!1):(u("login-error").textContent="",e=!0)},i=()=>{const e=this.inputPassword.value;let s="";/[!@#$%^&*()_+\-=[\]{};':"\\|,.<>/?]+/.test(e)||(s+="Password must contain at least one special character. "),e.length<6&&(s+="Password must be at least 6 characters long. "),s?(u("password-error").textContent=s.trim(),t=!1):(u("password-error").textContent="",t=!0)},o=()=>{e&&t?this.buttonSubmit.removeAttribute("disabled"):this.buttonSubmit.setAttribute("disabled","true")};this.inputLogin.addEventListener("input",(()=>{a(),o()})),this.inputPassword.addEventListener("input",(()=>{i(),o()})),this.form.addEventListener("submit",(o=>{const r=this.inputLogin.value,d=this.inputPassword.value;if(o.preventDefault(),a(),i(),e&&t){n.saveData("user",{login:r,password:d}),s.updateUser(r,d);const e=s.getUser();e.type="USER_LOGIN",l.wsSend(JSON.stringify(e)),this.inputLogin.value="",this.inputPassword.value="",this.buttonSubmit.removeAttribute("disabled")}})),this.form.addEventListener("keydown",(e=>{"Enter"===e.key&&(e.preventDefault(),this.form.dispatchEvent(new Event("submit")))}))}}class b extends a{constructor(){super(),Object.defineProperty(this,"container",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.container=document.createElement("main"),n.removeData("userForMessages")}draw(){this.container.innerHTML="";const e=n.getUserFromStorage("user");if(e&&e.password){const e=(new h).init();window.location.hash="main",this.container.append(e)}else{const e=(new m).init();window.location.hash="login",this.container.append(e)}return this.container}drawAbout(){window.location.hash="about",this.container.innerHTML="";const e=document.createElement("div");return e.classList.add("about__page"),e.innerHTML='\n      <h3 class="about__title">Fun Chat</h3>\n      <div class="about__info">FunChat is a lively and interactive messaging application designed to bring through engaging conversations</div>\n      <a class="about__link" href="https://github.com/letanatol/" target="_blank">letanatol</a>\n      <button type="button" class="button__back">Back</button>\n    ',this.container.append(e),this.container}addEventListeners(){window.addEventListener(t.UpdatePage,(()=>{const e=s.getPage();"login"===e&&this.draw(),"about"===e&&this.drawAbout(),"main"===e&&this.draw()})),this.container.addEventListener("click",(e=>{const t=e.target;if(t&&t.classList){if(t.classList.contains("header__button-logout")){const e=s.getUser(),t=n.getUserFromStorage("user");t&&t.password&&(e.type="USER_LOGOUT",e.payload&&e.payload.user&&(e.payload.user.login=t.login,e.payload.user.password=t.password,l.wsSend(JSON.stringify(e)),n.clearData(),s.updatePage("login")))}t.classList.contains("header__button-about")&&(s.updatePage("about"),this.drawAbout()),t.classList.contains("about_login-page")&&(s.updatePage("about"),this.drawAbout()),t.classList.contains("button__back")&&this.draw()}})),window.addEventListener("hashchange",(()=>{if(["#login","#main"].includes(window.location.hash)){const e=n.getUserFromStorage("user");if(e&&e.password){this.container.innerHTML="";const e=(new h).init();this.container.append(e),window.location.hash="main"}else{this.container.innerHTML="";const e=(new m).init();this.container.append(e),window.location.hash="login"}}}))}}class v extends a{constructor(){super(),Object.defineProperty(this,"container",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.container=document.createElement("div"),this.container.classList.add("modal")}draw(){return this.container.innerHTML='\n        <div class="modal-content">\n          <div class="spinner"></div>\n          <p class="game-modal__text">Connecting to the server...</p>\n        </div>\n    ',this.container}addEventListeners(){window.addEventListener(t.UpdateModalState,(()=>{s.getModalState()?this.container.classList.remove("show"):this.container.classList.add("show")}))}}window.addEventListener("hashchange",(()=>{if(["#login","#main"].includes(window.location.hash)){const e=n.getUserFromStorage("user");e&&e.password&&s.updatePage("main")}"#about"===window.location.hash&&s.updatePage("about")}));const w=new class{constructor(){const{body:e}=document,t=new b,s=new v;e.append(t.init(),s.init())}};console.log(w)})();